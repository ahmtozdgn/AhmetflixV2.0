// <auto-generated />
using System;
using Ahmetflix.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ahmetflix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512165203_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ahmetflix.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Ahmetflix.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IMDBId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenreName");

                    b.HasIndex("IMDBId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeriesId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Ahmetflix.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Ahmetflix.Models.Genre", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.HasIndex("GenreName");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Ahmetflix.Models.IMDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenreName");

                    b.ToTable("IMDBs");
                });

            modelBuilder.Entity("Ahmetflix.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IMDBId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenreName");

                    b.HasIndex("IMDBId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Ahmetflix.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IMDBId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenreName");

                    b.HasIndex("IMDBId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("CategoryGenre", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("GenresName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CategoriesId", "GenresName");

                    b.HasIndex("GenresName");

                    b.ToTable("CategoryGenre");
                });

            modelBuilder.Entity("Ahmetflix.Models.AppUser", b =>
                {
                    b.HasOne("Ahmetflix.Models.Category", null)
                        .WithMany("AppUsers")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Ahmetflix.Models.Genre", null)
                        .WithMany("AppUsers")
                        .HasForeignKey("GenreName");

                    b.HasOne("Ahmetflix.Models.IMDB", null)
                        .WithMany("AppUsers")
                        .HasForeignKey("IMDBId");

                    b.HasOne("Ahmetflix.Models.Movie", null)
                        .WithMany("AppUsers")
                        .HasForeignKey("MovieId");

                    b.HasOne("Ahmetflix.Models.Series", null)
                        .WithMany("AppUsers")
                        .HasForeignKey("SeriesId");
                });

            modelBuilder.Entity("Ahmetflix.Models.Genre", b =>
                {
                    b.HasOne("Ahmetflix.Models.Genre", null)
                        .WithMany("SubGenres")
                        .HasForeignKey("GenreName");
                });

            modelBuilder.Entity("Ahmetflix.Models.IMDB", b =>
                {
                    b.HasOne("Ahmetflix.Models.Category", "Category")
                        .WithMany("IMDBs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ahmetflix.Models.Genre", null)
                        .WithMany("IMDBs")
                        .HasForeignKey("GenreName");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ahmetflix.Models.Movie", b =>
                {
                    b.HasOne("Ahmetflix.Models.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ahmetflix.Models.Genre", null)
                        .WithMany("Movies")
                        .HasForeignKey("GenreName");

                    b.HasOne("Ahmetflix.Models.IMDB", "IMDB")
                        .WithMany()
                        .HasForeignKey("IMDBId");

                    b.Navigation("Category");

                    b.Navigation("IMDB");
                });

            modelBuilder.Entity("Ahmetflix.Models.Series", b =>
                {
                    b.HasOne("Ahmetflix.Models.Category", "Category")
                        .WithMany("Series")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ahmetflix.Models.Genre", null)
                        .WithMany("Series")
                        .HasForeignKey("GenreName");

                    b.HasOne("Ahmetflix.Models.IMDB", "IMDB")
                        .WithMany()
                        .HasForeignKey("IMDBId");

                    b.Navigation("Category");

                    b.Navigation("IMDB");
                });

            modelBuilder.Entity("CategoryGenre", b =>
                {
                    b.HasOne("Ahmetflix.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ahmetflix.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ahmetflix.Models.Category", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("IMDBs");

                    b.Navigation("Movies");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Ahmetflix.Models.Genre", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("IMDBs");

                    b.Navigation("Movies");

                    b.Navigation("Series");

                    b.Navigation("SubGenres");
                });

            modelBuilder.Entity("Ahmetflix.Models.IMDB", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("Ahmetflix.Models.Movie", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("Ahmetflix.Models.Series", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
