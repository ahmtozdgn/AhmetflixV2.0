@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav ms-auto" id="auth-area">
    <!-- Giriş yapmışsa -->
    <!-- JS ile doldurulacak -->
</ul>

<!-- Login Modal -->
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="loginModalLabel">Giriş Yap</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
      </div>
      <div class="modal-body">
        <form id="loginForm">
          <div class="mb-3">
            <label for="loginUsername" class="form-label">Kullanıcı Adı</label>
            <input type="text" class="form-control" id="loginUsername" required>
          </div>
          <div class="mb-3">
            <label for="loginPassword" class="form-label">Şifre</label>
            <input type="password" class="form-control" id="loginPassword" required>
          </div>
          <button type="submit" class="btn btn-primary w-100">Giriş Yap</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Register Modal -->
<div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="registerModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="registerModalLabel">Kayıt Ol</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
      </div>
      <div class="modal-body">
        <form id="registerForm">
          <div class="mb-3">
            <label for="registerUsername" class="form-label">Kullanıcı Adı</label>
            <input type="text" class="form-control" id="registerUsername" required>
          </div>
          <div class="mb-3">
            <label for="registerPassword" class="form-label">Şifre</label>
            <input type="password" class="form-control" id="registerPassword" required>
          </div>
          <button type="submit" class="btn btn-outline-primary w-100">Kayıt Ol</button>
        </form>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
// Kullanıcı yönetimi (localStorage demo)
function getUsers() {
    return JSON.parse(localStorage.getItem('users') || '[]');
}
function setUsers(users) {
    localStorage.setItem('users', JSON.stringify(users));
}
function getCurrentUser() {
    return JSON.parse(localStorage.getItem('currentUser') || 'null');
}
function setCurrentUser(user) {
    localStorage.setItem('currentUser', JSON.stringify(user));
}
function logoutUser() {
    localStorage.removeItem('currentUser');
    renderAuthArea();
    showToast('Çıkış yapıldı.', 'info');
}
function renderAuthArea() {
    const user = getCurrentUser();
    const area = document.getElementById('auth-area');
    if (user) {
        area.innerHTML = `
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-person-circle me-1"></i>
                <span class="d-none d-sm-inline">Hoş geldin, ${user.username}</span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" href="#" onclick="showToast('Profil sayfası yakında!','info')"><i class="bi bi-person me-2"></i>Profil</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="#" onclick="logoutUser()"><i class="bi bi-box-arrow-right me-2"></i>Çıkış Yap</a></li>
            </ul>
        </li>`;
    } else {
        area.innerHTML = `
        <li class="nav-item me-2">
            <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#registerModal">
                <i class="bi bi-person-plus me-1"></i>Kayıt Ol
            </button>
        </li>
        <li class="nav-item">
            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#loginModal">
                <i class="bi bi-box-arrow-in-right me-1"></i>Giriş Yap
            </button>
        </li>`;
    }
}
// Kayıt ol
$('#registerForm').on('submit', function(e) {
    e.preventDefault();
    const username = $('#registerUsername').val().trim();
    const password = $('#registerPassword').val();
    if (!username || !password) return;
    let users = getUsers();
    if (users.find(u => u.username === username)) {
        showToast('Bu kullanıcı adı zaten alınmış!', 'error');
        return;
    }
    users.push({ username, password });
    setUsers(users);
    setCurrentUser({ username });
    $('#registerModal').modal('hide');
    renderAuthArea();
    showToast('Kayıt başarılı, hoş geldin!', 'success');
});
// Giriş yap
$('#loginForm').on('submit', function(e) {
    e.preventDefault();
    const username = $('#loginUsername').val().trim();
    const password = $('#loginPassword').val();
    let users = getUsers();
    const user = users.find(u => u.username === username && u.password === password);
    if (!user) {
        showToast('Kullanıcı adı veya şifre hatalı!', 'error');
        return;
    }
    setCurrentUser({ username });
    $('#loginModal').modal('hide');
    renderAuthArea();
    showToast('Giriş başarılı, hoş geldin!', 'success');
});
// Sayfa yüklendiğinde auth alanını güncelle
$(document).ready(renderAuthArea);
</script>
}

<style>
    .navbar-nav .btn {
        padding: 0.375rem 1rem;
        font-size: 0.9rem;
        border-radius: 6px;
        transition: all 0.2s ease;
    }
    .navbar-nav .btn-outline-primary {
        border-color: var(--bs-primary);
        color: var(--bs-primary);
    }
    .navbar-nav .btn-outline-primary:hover {
        background-color: var(--bs-primary);
        color: #fff;
    }
    .navbar-nav .btn-primary {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
        color: #fff;
    }
    .navbar-nav .btn-primary:hover {
        background-color: var(--bs-primary-dark, #0b5ed7);
        border-color: var(--bs-primary-dark, #0b5ed7);
    }
    @@media (max-width: 576px) {
        .navbar-nav .btn {
            padding: 0.25rem 0.75rem;
            font-size: 0.85rem;
        }
        .navbar-nav .btn i {
            margin-right: 0 !important;
        }
        .navbar-nav .btn span {
            display: none;
        }
    }
</style> 